/* ###################################################################
**     Filename    : main.c
**     Project     : Luxometer
**     Processor   : MK64FN1M0VLL12
**     Version     : Driver 01.01
**     Compiler    : GNU C Compiler
**     Date/Time   : 2016-12-07, 09:27, # CodeGen: 10
**     Abstract    :
**         Main module.
**         This module contains user's application code.
**     Settings    :
**     Contents    :
**         No public methods
**
** ###################################################################*/
/*!
** @file main.c
** @version 01.01
** @brief
**         Main module.
**         This module contains user's application code.
*/         
/*!
**  @addtogroup main_module main module documentation
**  @{
*/         
/* MODULE main */


/* Including needed modules to compile this module/procedure */
#include "Cpu.h"
#include "Events.h"
#include "WAIT1.h"
#include "LED_ON.h"
#include "START.h"
#include "RESET.h"
#include "PWDN.h"
#include "DRDY.h"
#include "CS_SPI.h"
#include "WAIT2.h"
#include "SM1.h"
#include "SMasterLdd1.h"
#include "Term1.h"
#include "Inhr1.h"
#include "ASerialLdd1.h"
#include "UTIL1.h"
/*------Includes modules to Poncho------*/
#include "Definitions_ADS1299.h"
#include "Drv_GPIO.h"
#include "Drv_SSP.h"
#include "Drv_Devices.h"
#include "Drv_ADS1299.h"
/* Including shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
#include "PDD_Includes.h"
#include "Init_Config.h"
/* User includes (#include below this line is not maintained by Processor Expert) */

/*lint -save  -e970 Disable MISRA rule (6.3) checking. */
int main(void)
/*lint -restore Enable MISRA rule (6.3) checking. */
{
  /* Write your local variable definition here */

  /*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
  PE_low_level_init();
  /*** End of Processor Expert internal initialization.                    ***/

  /* Write your code here */

  //printf("Hello\n");
  //Term1_SendStr("ERG_Firmware 1.0\r\n");
  /*Drv_Devices_startDevices();

  //bool master = Drv_Devices_isMaster();
  bool master = TRUE;

  if(master == TRUE) //If the board is Master, can get commands via UART
  {
  	Drv_Devices_startFromScratch();

  	while(1)
  	{
  		Drv_Devices_sendChannelData(); // send data when is available

  		Drv_Devices_eventSerial(); //receive commands
  	}
  }
  else //If the board is Slave, can't get commands via UART
  {
  	Drv_Devices_startAsSlave();

  	while(1){}
  }*/

  Drv_Devices_startFromScratch();

  WAIT1_Waitms(1000);

  Drv_GPIO_FRDM_setup(LED_ON,FALSE);

  uint32_t read;
  uint8_t reg;
  float scale_factor;
  float volt;
  float temp;
  int channel;

  Drv_GPIO_FRDM_setup(START,TRUE);
  WAIT1_Waitms(10);

  while(TRUE){
	  Drv_ADS1299_RDATA(BOARD_ADS);
	  while(!Drv_ADS1299_isDataAvailable()){}
	  for(channel=1;channel<2;channel++){
		  //scale_factor = 4.5/0x007FFFFF;
		  read = Drv_ADS1299_getboardData(channel,BOARD_ADS);
		  read = read&0x00FFFFFF;
		  if((read&0x00800000)>0){
			  //read = ~((read | 0xFF000000)-1);
			  read = (~read) + 1;
			  read = read&0x00FFFFFF;
			  volt = read*4.5/(Drv_ADS1299_getGain(channel,BOARD_ADS)*0x007FFFFF);
		  }
		  else{
			  volt = read*4.5/(Drv_ADS1299_getGain(channel,BOARD_ADS)*0x007FFFFF);
		  }
		  reg = Drv_ADS1299_RREG(ID_REG,BOARD_ADS);
		  Term1_SendFloatNum(volt);
		  Term1_SendChar(',');
		  //Term1_SendNum(read);
		  //Term1_CRLF(); /* writing a new line */
	  }
	  Term1_CRLF();
  }

  /* For example: for(;;) { } */

  /*** Don't write any code pass this line, or it will be deleted during code generation. ***/
  /*** RTOS startup code. Macro PEX_RTOS_START is defined by the RTOS component. DON'T MODIFY THIS CODE!!! ***/
  #ifdef PEX_RTOS_START
    PEX_RTOS_START();                  /* Startup of the selected RTOS. Macro is defined by the RTOS component. */
  #endif
  /*** End of RTOS startup code.  ***/
  /*** Processor Expert end of main routine. DON'T MODIFY THIS CODE!!! ***/
  for(;;){}
  /*** Processor Expert end of main routine. DON'T WRITE CODE BELOW!!! ***/
} /*** End of main routine. DO NOT MODIFY THIS TEXT!!! ***/

/* END main */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
